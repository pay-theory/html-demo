AWSTemplateFormatVersion: '2010-09-09'
Description: Secure Tags Library Deployment
Parameters:
  Partner:
    Type: String
    Description: The environment you're deploying to.
  Stage:
    Type: String
    Description: Library stage to use.
  Repository:
    Type: String
    Description: The repository you are deploying from.
    Default: html-demo     
  TargetMode:
    Type: String
    Description: The Deployment Mode
    Default: standard
    AllowedValues:
        - standard
        - '-new'
        - '-old'
  HostedZone:
    Type: String
    Description: v2 hosted zone
  CertificateArn:
    Type: String
    Description: v2 certificate arn
Conditions:
    isStandard: !Equals [ !Ref TargetMode, standard]  
Resources:

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub '${Repository}-${AWS::AccountId}-${Partner}-${Stage}'
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
    DeletionPolicy: Delete
  BucketPolicy:
    DependsOn:
      - S3Bucket
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${Repository}-${AWS::AccountId}-${Partner}-${Stage}/*'
            Principal: '*'
          - Action:
              - 's3:ListBucket'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${Repository}-${AWS::AccountId}-${Partner}-${Stage}'
            Principal: '*'    
    

  CloudFront:
    DependsOn:
      - S3Bucket
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !If [ 
        isStandard, 
        !Sub "${Partner}.html.example.${Stage}.com", 
        !Sub "${Partner}${TargetMode}.html.example.${Stage}.com" ]
        CustomErrorResponses:
          -
            ErrorCachingMinTTL: 15
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: !Sub 'paytheory-sdk-example-${Partner}-${Stage}'
          CachePolicyId: '{{resolve:ssm:pt-global-examples-cache}}'
          OriginRequestPolicyId: '{{resolve:ssm:pt-global-examples-origin}}'
          ViewerProtocolPolicy: redirect-to-https
        HttpVersion: http2
        IPV6Enabled: true
        Enabled: true
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: 'http-only'
              OriginSSLProtocols:
                - TLSv1.2
            DomainName: !Sub "${S3Bucket}.s3-website-${AWS::Region}.amazonaws.com"
            OriginPath: !Sub '/${Stage}/${Partner}'
            Id: !Sub 'paytheory-sdk-example-${Partner}-${Stage}'
        ViewerCertificate:
          AcmCertificateArn: !Sub '${CertificateArn}'
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: 'sni-only'
  Route53:
    DependsOn:
      - CloudFront
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: !Sub '${HostedZone}'
      RecordSets:
        -
          Name: !If [ 
        isStandard, 
        !Sub "${Partner}.html.example.${Stage}.com", 
        !Sub "${Partner}${TargetMode}.html.example.${Stage}.com" ]
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFront.DomainName

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'cb-${Repository}-${Partner}-${Stage}'
      Description: !Sub '${Repository} service build'
      ServiceRole: !Sub '{{resolve:ssm:pt-global-codebuild-role}}'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: !Sub '${Stage}'
          - Name: PARTNER
            Type: PLAINTEXT
            Value: !Sub '${Partner}' 
          - Name: TARGET_MODE
            Type: PLAINTEXT
            Value: !Sub '${TargetMode}'  
          - Name: DISTRIBUTION
            Type: PLAINTEXT
            Value: !Ref CloudFront
          - Name: GITHUB_ACCESS_TOKEN
            Type: PLAINTEXT
            Value: !Sub '{{resolve:ssm:/automation/git-hub-access-token}}'
          - Name: TARGET_REGION
            Type: PLAINTEXT
            Value: !Sub '${AWS::Region}'
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 20  

  CodePipeline:
    DependsOn:
      - CodeBuild
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub 'cb-${Repository}-${Partner}-${Stage}'
      RoleArn: !Sub '{{resolve:ssm:pt-global-codepipeline-role}}'
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Version: "1"
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
              Configuration:
                ConnectionArn: !Sub '{{resolve:ssm:pt-global-github-connection}}'
                FullRepositoryId: !Sub 'pay-theory/${Repository}'
                BranchName: !If [ isStandard, !Sub '${Partner}-${Stage}', !Sub '${Partner}${TargetMode}-${Stage}' ]
                OutputArtifactFormat: "CODE_ZIP"
        - Name: Deploy
          Actions:
            - Name: !Sub 'cd-${Repository}-${Partner}-${Stage}'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1                
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket


Outputs:
  Renew:
    Description: Trigger to update/rebuild formation
    Value: 'Mar 14 2022'                